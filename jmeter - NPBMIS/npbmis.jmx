<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="NPBMIS" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">true</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Website users" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\Ranjan\Desktop\result.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="budgetcode - counter" enabled="true">
          <stringProp name="CounterConfig.start">30</stringProp>
          <stringProp name="CounterConfig.end">1000</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">budget_code</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="list of variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="website" elementType="Argument">
              <stringProp name="Argument.name">website</stringProp>
              <stringProp name="Argument.value">npbmis-stage.yipl.com.np</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mbyI6eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6InN1cGVyYWRtaW4iLCJyb2xlIjoic3VwZXIgYWRtaW4iLCJtaW5pc3RyeV9pZCI6bnVsbCwiYWdlbmN5X2lkIjpudWxsLCJlbWFpbCI6InN1cGVyYWRtaW5AYWRtaW4uY29tIiwicm9sZV9pZCI6MX0sImlhdCI6MTY5NDY5NTgxMywiZXhwIjoxNjk1NTU5ODEzfQ.eJT_ftr14987rvDC9MfygdhSaN8E4tg58YbYP6rooeo</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">npbmis-api-stage.yipl.com.np</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Stage = Identification " enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add project " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;ministry_id&quot;:3,&quot;name_ne&quot;:&quot;test_uploading_files_${budget_code}&quot;,&quot;name_en&quot;:&quot;test_uploading_files${budget_code}&quot;,&quot;budget_code&quot;:&quot;${budget_code}&quot;,&quot;sectoral_criteria&quot;:&quot;tourism&quot;,&quot;detail_info&quot;:{&quot;location&quot;:{&quot;province&quot;:[1,538],&quot;district&quot;:[58],&quot;municipality&quot;:[64]}},&quot;status&quot;:&quot;draft&quot;,&quot;stage&quot;:&quot;identification&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="projectid - Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">project_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">prblm</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="budgetcode- Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">budgetcode_json</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.budget_code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">prblm</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Identification, Step 1 - General detail" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&quot;general_detail&quot;:{&quot;background&quot;:&quot;bb&quot;,&quot;projectCategorization&quot;:{&quot;sectorial&quot;:&quot;economic&quot;,&quot;projectDetailCostDuration&quot;:&quot;small&quot;,&quot;basisOfProjectSelection&quot;:&quot;364&quot;,&quot;availabilityOfAdditionalInfrastructure&quot;:&quot;22&quot;,&quot;alignOfPeriodicPlan&quot;:&quot;656gh&quot;,&quot;targetPopulation&quot;:{&quot;popPlace&quot;:&quot;6565&quot;,&quot;popNumber&quot;:13213},&quot;subSectorial&quot;:&quot;agriculture&quot;}},&quot;basic_info&quot;:{&quot;preliminary_cost&quot;:5424,&quot;budget_code&quot;:&quot;${budget_code}&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}?stage=identification&amp;formType=general_detail&amp;saveType=saveAndContinue</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Identification, Step 2 - Detailed Description" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;detailed_description&quot;:{&quot;projectJustification&quot;:{&quot;economic&quot;:&quot;${project_id}&quot;,&quot;finance&quot;:&quot;${project_id}&quot;,&quot;technical&quot;:&quot;sadf&quot;,&quot;social&quot;:&quot;sdf&quot;,&quot;environmental&quot;:&quot;${project_id}&quot;},&quot;identificationAnalysis&quot;:&quot;f&quot;,&quot;constructionMethods&quot;:&quot;community&quot;,&quot;priority&quot;:&quot;yes&quot;,&quot;mainComponent&quot;:&quot;asdf&quot;,&quot;estimatedTime&quot;:12,&quot;availabilitySkillLabour&quot;:&quot;asdf&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}?stage=identification&amp;formType=detailed_description&amp;saveType=saveAndContinue</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Identification, Step  3 - Financial" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&quot;financial&quot;:{&quot;investmentStructures&quot;:&quot;${project_id}&quot;,&quot;investmentStatus&quot;:&quot;${project_id}&quot;,&quot;annualInvestment&quot;:&quot;sadf&quot;,&quot;preliminaryEconomicFinancialAnalysis&quot;:&quot;asdf&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}?stage=identification&amp;formType=financial&amp;saveType=saveAndContinue</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Identification, Step 4 - Land Acquistion" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;land_acquisition&quot;:{&quot;areaLandAcquired&quot;:123,&quot;landType&quot;:&quot;lease&quot;,&quot;estimatedCostLand&quot;:12,&quot;householdsAffected&quot;:213,&quot;householdsToBeResettled&quot;:213,&quot;possibleLocationResettlementCost&quot;:2132,&quot;expectedProjectAchievements&quot;:&quot;${project_id}&quot;,&quot;riskRelatedIssues&quot;:&quot;${project_id}&quot;,&quot;sectoralProjectSpecificStandard&quot;:&quot;${project_id}&quot;,&quot;otherSubject&quot;:&quot;sadf&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}?stage=identification&amp;formType=land_acquisition&amp;saveType=saveAndContinue</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Identification, Click on Verification" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;status&quot;:&quot;verification&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}?stage=identification&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Identification, Click on  Approval" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&quot;status&quot;:&quot;approval&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/projects/${project_id}?stage=identification&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Identification, Click on Evaluation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&quot;status&quot;:&quot;evaluation&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}?stage=identification&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Identification, Identification - Assessment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;basic_criteria&quot;:{&quot;economicFinancialFeasibility&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;necessaryToImplementButNotFeasible&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;technicalFeasibility&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;hasBestOptionChosen&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;isLandRequiredToImplementBeAvailable&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;haveNonEssentialItemsCompleted&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;appropriateFromPovOfSocialEnvironment&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;appropriateFromPovOfClimateDisaster&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;totalScore&quot;:8,&quot;percentage&quot;:100},&quot;general_criteria&quot;:{&quot;projectContributesToNationalThinkingAndGoalsOfDevelopment&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;projectSubjectMatterInNationalPriorityAndProsperityArea&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;projectDirectlyContributesToNationalAndInternationalDevelopmentGoals&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;projectConstructionMethodClear&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;laborAndSkillsAvailableForProjectImplementation&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;targetCommunityOfProjectCorrectAndAppropriate&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;statusOfServiceFacilitiesConfirmed&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;projectImplementationNotAffectReligiousCulturalHistoricalTouristicHeritage&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;projectAlignedWithPeriodicPlanAndSectoralStrategy&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;institutionalCapacityToImplementProject&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;certainSourceOfInvestmentOrInvestmentPlanMentioned&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;operationStructureClearAfterProjectConstruction&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;projectPartOfNationalOrRegionalMasterPlan&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;proposedProjectCompatibleWithLandUsePoliciesAndPlans&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;basicFacilitiesAvailableInProjectArea&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;possibilityToResettleOrManageProposedProjectLand&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;necessaryLegalProcessCompletedForProposedForestAreaLand&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;planProposedToAddressDisputesProblemsOrComplicationsRelatedToProject&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;totalScore&quot;:18,&quot;percentage&quot;:100},&quot;sectoral_criteria&quot;:{&quot;subSectoralCriteriaData&quot;:{&quot;projectFeasibleInTermsOfTouristSitesAndTourismArrivals&quot;:{&quot;value&quot;:1,&quot;remarks&quot;:&quot;&quot;},&quot;totalScore&quot;:1,&quot;percentage&quot;:100}},&quot;total_score&quot;:100}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/assessments/${project_id}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Stage = Development form , development type = prefeasibility" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage =  Prefeasibility Development , Step 1- Project Background" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="project_requirements" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">project_requirements</stringProp>
                </elementProp>
                <elementProp name="account_of_the_grounds_of_justification" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dfskl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">account_of_the_grounds_of_justification</stringProp>
                </elementProp>
                <elementProp name="good_side_of_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">jlasfj</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">good_side_of_project</stringProp>
                </elementProp>
                <elementProp name="weak_side_of_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">02ljlfds</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">weak_side_of_project</stringProp>
                </elementProp>
                <elementProp name="analysis_of_opportunities_and_challenges" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sfdjlasf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">analysis_of_opportunities_and_challenges</stringProp>
                </elementProp>
                <elementProp name="status_of_policy_legal_norms_related_to_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">jsfsdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">status_of_policy_legal_norms_related_to_project</stringProp>
                </elementProp>
                <elementProp name="local_concerns_and_other_implementation_challenges" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">local_concerns_and_other_implementation_challenges</stringProp>
                </elementProp>
                <elementProp name="executive_summary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">fdsdsf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">executive_summary</stringProp>
                </elementProp>
                <elementProp name="project_purpose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">project_purpose</stringProp>
                </elementProp>
                <elementProp name="general_analysis_of_current_status_of_subject_area_related_to_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">general_analysis_of_current_status_of_subject_area_related_to_project</stringProp>
                </elementProp>
                <elementProp name="analysis_of_status_of_development_indicators_of_project_area_beneficiaries" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">analysis_of_status_of_development_indicators_of_project_area_beneficiaries</stringProp>
                </elementProp>
                <elementProp name="project_demand_situation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dsf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">project_demand_situation</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=prefeasibility&amp;formType=project_background&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Prefeasibility Development , Step 2 - study methodology" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sources_of_data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asfd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sources_of_data</stringProp>
                </elementProp>
                <elementProp name="methods_of_statistical_analysis" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdaf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methods_of_statistical_analysis</stringProp>
                </elementProp>
                <elementProp name="methods_used_in_the_study" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">jsflj</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methods_used_in_the_study</stringProp>
                </elementProp>
                <elementProp name="tools_and_formulas" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tools_and_formulas</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=prefeasibility&amp;formType=study_methodology&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Prefeasibility Development , Step 3 - policy identify" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">existing_law_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">national_and_regional_policies_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">plans_and_programs_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">master_plans_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">action_plan_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">identity_and_compatibility_of_project_with_standards_files</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="existing_law" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">existing_law</stringProp>
                </elementProp>
                <elementProp name="national_and_regional_policies" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">national_and_regional_policies</stringProp>
                </elementProp>
                <elementProp name="plans_and_programs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">plans_and_programs</stringProp>
                </elementProp>
                <elementProp name="master_plans" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">master_plans</stringProp>
                </elementProp>
                <elementProp name="action_plan" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">action_plan</stringProp>
                </elementProp>
                <elementProp name="identity_and_compatibility_of_project_with_standards" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">identity_and_compatibility_of_project_with_standards</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=prefeasibility&amp;formType=policy_identity&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = PrefeasibilityDevelopment , Step 4 - prefeasibility analysis" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="2nd_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">2nd_file.pdf</stringProp>
                  <stringProp name="File.paramname">basis_for_obtaining_project_approval_and_permit_if_necessary_files</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="preliminary_technical_analysis" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">22</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">preliminary_technical_analysis</stringProp>
                </elementProp>
                <elementProp name="preliminary_economic_and_financial_analysis" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">preliminary_economic_and_financial_analysis</stringProp>
                </elementProp>
                <elementProp name="general_analysis_of_market_demand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dsff</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">general_analysis_of_market_demand</stringProp>
                </elementProp>
                <elementProp name="general_analysis_of_environmental_and_social_impacts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdfds</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">general_analysis_of_environmental_and_social_impacts</stringProp>
                </elementProp>
                <elementProp name="climate_adaptation_and_disaster_risk_analysis" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">climate_adaptation_and_disaster_risk_analysis</stringProp>
                </elementProp>
                <elementProp name="sustainability_analysis" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sustainability_analysis</stringProp>
                </elementProp>
                <elementProp name="basis_for_obtaining_project_approval_and_permit_if_necessary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">basis_for_obtaining_project_approval_and_permit_if_necessary</stringProp>
                </elementProp>
                <elementProp name="preliminary_analysis_of_gender_and_social_inclusion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">preliminary_analysis_of_gender_and_social_inclusion</stringProp>
                </elementProp>
                <elementProp name="cost_estimates_sources_and_patterns_of_investment" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cost_estimates_sources_and_patterns_of_investment</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=prefeasibility&amp;formType=prefeasibility_analysis&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = PrefeasibilityDevelopment , Step 5 - implementation operation framework" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="how_is_the_project_implemented" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdaf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">how_is_the_project_implemented</stringProp>
                </elementProp>
                <elementProp name="at_which_level_project_implemented" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sfd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">at_which_level_project_implemented</stringProp>
                </elementProp>
                <elementProp name="with_which_sector_organization_involved_project_implemented" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf 2khk</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">with_which_sector_organization_involved_project_implemented</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=prefeasibility&amp;formType=implementation_operation_framework&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Prefeasibility Development , Step 6 - study recommendations suggestion" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">preliminary_outline_of_policy_and_institutional_structure_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">issues_of_local_concern_and_other_implementation_challenges_and_measures_to_address_them_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">reference_material_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">schedule_files</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="whether_or_not_project_is_suitable_for_development_and_implementation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">whether_or_not_project_is_suitable_for_development_and_implementation</stringProp>
                </elementProp>
                <elementProp name="if_appropriate_for_development_and_implementation_of_project_a_preliminary_outline_of_policy_and_institutional_structure" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">fsa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">if_appropriate_for_development_and_implementation_of_project_a_preliminary_outline_of_policy_and_institutional_structure</stringProp>
                </elementProp>
                <elementProp name="issues_of_local_concern_and_other_implementation_challenges_and_measures_to_address_them" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dsaf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">issues_of_local_concern_and_other_implementation_challenges_and_measures_to_address_them</stringProp>
                </elementProp>
                <elementProp name="reference_material" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reference_material</stringProp>
                </elementProp>
                <elementProp name="schedule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">schedule</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=prefeasibility&amp;formType=study_recommendations_suggestions&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Stage = Development form , development type=feasbility" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Feasibility Development, Step 1 -Project Background" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">other_challenges_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">executive_summary_files</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="project_demand_requirements" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">gdl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">project_demand_requirements</stringProp>
                </elementProp>
                <elementProp name="justification_of_project_demand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdfl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">justification_of_project_demand</stringProp>
                </elementProp>
                <elementProp name="good_side_of_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dsdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">good_side_of_project</stringProp>
                </elementProp>
                <elementProp name="weaknesses_of_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdaf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">weaknesses_of_project</stringProp>
                </elementProp>
                <elementProp name="detailed_analysis_of_project_opportunities_challenges" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">af</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">detailed_analysis_of_project_opportunities_challenges</stringProp>
                </elementProp>
                <elementProp name="matters_of_local_concern" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">matters_of_local_concern</stringProp>
                </elementProp>
                <elementProp name="implementation_risks" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asfd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">implementation_risks</stringProp>
                </elementProp>
                <elementProp name="other_challenges" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">afd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">other_challenges</stringProp>
                </elementProp>
                <elementProp name="executive_summary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">ad</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">executive_summary</stringProp>
                </elementProp>
                <elementProp name="details_regarding_location_and_geographical_location_and_climate" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdasd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">details_regarding_location_and_geographical_location_and_climate</stringProp>
                </elementProp>
                <elementProp name="project_purpose" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">project_purpose</stringProp>
                </elementProp>
                <elementProp name="segmented_description_of_the_target_group" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdasd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">segmented_description_of_the_target_group</stringProp>
                </elementProp>
                <elementProp name="factual_analysis_of_status_of_development_indicators_of_project_area_and_beneficiaries" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdasd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">factual_analysis_of_status_of_development_indicators_of_project_area_and_beneficiaries</stringProp>
                </elementProp>
                <elementProp name="project_demand_situation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">jladsj23</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">project_demand_situation</stringProp>
                </elementProp>
                <elementProp name="factual_analysis_of_current_situation_of_subject_area_related_to_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">factual_analysis_of_current_situation_of_subject_area_related_to_project</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=feasibility&amp;formType=project_background&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Feasibility Development, Step 2 - Study Methodology" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">sources_of_data_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">methods_of_data_collection_and_analysis_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">methods_used_in_the_study_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">tools_and_formulas_files</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sources_of_data" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">sources_of_data</stringProp>
                </elementProp>
                <elementProp name="methods_of_data_collection_and_analysis" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">safddfs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methods_of_data_collection_and_analysis</stringProp>
                </elementProp>
                <elementProp name="methods_used_in_the_study" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdfdfs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">methods_used_in_the_study</stringProp>
                </elementProp>
                <elementProp name="tools_and_formulas" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">tools_and_formulas</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=feasibility&amp;formType=study_methodology&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Feasibility Development, Step 3 - Policy Identify" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">existing_law_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">national_and_regional_policies_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">plans_and_programs_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">strategy_files</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="existing_law" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sffsd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">existing_law</stringProp>
                </elementProp>
                <elementProp name="national_and_regional_policies" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdaf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">national_and_regional_policies</stringProp>
                </elementProp>
                <elementProp name="plans_and_programs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdfsdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">plans_and_programs</stringProp>
                </elementProp>
                <elementProp name="strategy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">fsad</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">strategy</stringProp>
                </elementProp>
                <elementProp name="master_plans" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dgadf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">master_plans</stringProp>
                </elementProp>
                <elementProp name="action_plan" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sadf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">action_plan</stringProp>
                </elementProp>
                <elementProp name="identity_and_compatibility_of_project_with_standards" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">adsf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">identity_and_compatibility_of_project_with_standards</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=feasibility&amp;formType=policy_identity&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Feasibility Development, Step 4 - Probability Analysis" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="technical_aspects" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dsaf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">technical_aspects</stringProp>
                </elementProp>
                <elementProp name="economic_and_financial_aspects" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdfsdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">economic_and_financial_aspects</stringProp>
                </elementProp>
                <elementProp name="reasons_and_confirmation_if_project_should_be_implemented_even_if_it_does_not_appear_to_be_profitable" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dfs21</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reasons_and_confirmation_if_project_should_be_implemented_even_if_it_does_not_appear_to_be_profitable</stringProp>
                </elementProp>
                <elementProp name="market_and_demand_conditions" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">fasdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">market_and_demand_conditions</stringProp>
                </elementProp>
                <elementProp name="environmental_and_social_impact" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dsfaf12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">environmental_and_social_impact</stringProp>
                </elementProp>
                <elementProp name="climate_change_impacts_and_adaptation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdfsf12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">climate_change_impacts_and_adaptation</stringProp>
                </elementProp>
                <elementProp name="disaster_risk_management" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdfsd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">disaster_risk_management</stringProp>
                </elementProp>
                <elementProp name="gender_equality_and_social_inclusion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">df1dfs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">gender_equality_and_social_inclusion</stringProp>
                </elementProp>
                <elementProp name="other_potential_risk_management" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sfd12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">other_potential_risk_management</stringProp>
                </elementProp>
                <elementProp name="durability" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dsf12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">durability</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=feasibility&amp;formType=probability_analysis&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Feasibility Development, Step 5 - Implementation and Oprn Framework" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="from_which_level" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">saf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">from_which_level</stringProp>
                </elementProp>
                <elementProp name="in_which_sector_body_is_involved" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dfsd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">in_which_sector_body_is_involved</stringProp>
                </elementProp>
                <elementProp name="how_to_implement_the_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf12q</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">how_to_implement_the_project</stringProp>
                </elementProp>
                <elementProp name="who_will_be_responsible_for_what" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sfsf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">who_will_be_responsible_for_what</stringProp>
                </elementProp>
                <elementProp name="what_will_be_framework_for_coordination_and_inter_agency_interoperability" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dsf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">what_will_be_framework_for_coordination_and_inter_agency_interoperability</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=feasibility&amp;formType=implementation_operation_framework&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Feasibility Development, Step 6 - Expected Result" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">results_blueprint_with_objective_and_measurable_indicators_of_project_results_achievements_and_impact_files</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="results_blueprint_with_objective_and_measurable_indicators_of_project_results_achievements_and_impact" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sadf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">results_blueprint_with_objective_and_measurable_indicators_of_project_results_achievements_and_impact</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=feasibility&amp;formType=expected_results&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Feasibility Development, Step 7 - Conclusions and recommendations" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">initial_outline_of_the_necessary_policy_and_institutional_structure_for_implementation_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">local_concerns_and_other_implementation_challenges_and_ways_to_address_them_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">reference_material_files</stringProp>
                </elementProp>
                <elementProp name="1st_file.pdf" elementType="HTTPFileArg">
                  <stringProp name="File.mimetype">application/pdf</stringProp>
                  <stringProp name="File.path">1st_file.pdf</stringProp>
                  <stringProp name="File.paramname">schedule_files</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="whether_or_not_project_is_suitable_for_development_and_implementation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dsfsd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">whether_or_not_project_is_suitable_for_development_and_implementation</stringProp>
                </elementProp>
                <elementProp name="initial_outline_of_the_necessary_policy_and_institutional_structure_for_implementation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">initial_outline_of_the_necessary_policy_and_institutional_structure_for_implementation</stringProp>
                </elementProp>
                <elementProp name="local_concerns_and_other_implementation_challenges_and_ways_to_address_them" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdffds</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">local_concerns_and_other_implementation_challenges_and_ways_to_address_them</stringProp>
                </elementProp>
                <elementProp name="reference_material" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf1w1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reference_material</stringProp>
                </elementProp>
                <elementProp name="schedule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">schedule</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?developmentType=feasibility&amp;formType=conclusions_and_recommendations&amp;saveType=saveAndContinue&amp;stage=development</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Development/Criteria- Gender and social inclusion analysis" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="section_3[provision_of_gender_related_training_for_employees_management_officers_and_directors_involved_in_project][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_3[provision_of_gender_related_training_for_employees_management_officers_and_directors_involved_in_project][value]</stringProp>
                </elementProp>
                <elementProp name="section_4[status_of_gender_balance_of_staff_and_those_involved_in_management_and_operations_required_for_project_design_and_implementation][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_4[status_of_gender_balance_of_staff_and_those_involved_in_management_and_operations_required_for_project_design_and_implementation][value]</stringProp>
                </elementProp>
                <elementProp name="section_5[inclusion_of_gender_issues_as_a_basis_for_project_monitoring_and_evaluation][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_5[inclusion_of_gender_issues_as_a_basis_for_project_monitoring_and_evaluation][value]</stringProp>
                </elementProp>
                <elementProp name="section_5[involvement_of_gender_experts_in_project_design_accounting_and_evaluation][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_5[involvement_of_gender_experts_in_project_design_accounting_and_evaluation][value]</stringProp>
                </elementProp>
                <elementProp name="section_1[analysis_of_project_related_gender_responsive_indicators_targets_data_from_baseline_surveys][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_1[analysis_of_project_related_gender_responsive_indicators_targets_data_from_baseline_surveys][value]</stringProp>
                </elementProp>
                <elementProp name="section_1[analysis_of_status_of_indicators_of_gender_discrimination_in_subject_area_of_project][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_1[analysis_of_status_of_indicators_of_gender_discrimination_in_subject_area_of_project][value]</stringProp>
                </elementProp>
                <elementProp name="section_1[analysis_of_gender_relations_of_access_to_health_services_agriculture_market_and_education][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_1[analysis_of_gender_relations_of_access_to_health_services_agriculture_market_and_education][value]</stringProp>
                </elementProp>
                <elementProp name="section_1[ensuring_adequate_budget_for_necessary_gender_programs_and_activities][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_1[ensuring_adequate_budget_for_necessary_gender_programs_and_activities][value]</stringProp>
                </elementProp>
                <elementProp name="section_1[inclusion_of_women_minorities_and_target_communities_in_design_and_implementation_of_proposed_projects][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_1[inclusion_of_women_minorities_and_target_communities_in_design_and_implementation_of_proposed_projects][value]</stringProp>
                </elementProp>
                <elementProp name="section_2[participation_of_disadvantaged_women_and_men_in_project_design_implementation_and_distribution_of_benefits_to_ensure_access][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">section_2[participation_of_disadvantaged_women_and_men_in_project_design_implementation_and_distribution_of_benefits_to_ensure_access][value]</stringProp>
                </elementProp>
                <elementProp name="totalScore" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">totalScore</stringProp>
                </elementProp>
                <elementProp name="percentage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">100</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">percentage</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development/criteria?criteriaType=methods_of_gender_and_social_inclusion_analysis</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Development/Criteria - Environmental impact analysis" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="selectedData[project_site][is_project_site_densely_populated][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[project_site][is_project_site_densely_populated][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[project_site][does_project_site_belong_to_an_environmentally_sensitive_area][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[project_site][does_project_site_belong_to_an_environmentally_sensitive_area][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[physical_subject][does_excessive_soil_or_rock_excavation_cause_damage_to_natural_scenery][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[physical_subject][does_excessive_soil_or_rock_excavation_cause_damage_to_natural_scenery][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[physical_subject][is_there_a_possibility_of_flooding_due_to_road_construction][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[physical_subject][is_there_a_possibility_of_flooding_due_to_road_construction][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[physical_subject][will_road_construction_bring_changes_in_drainage][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[physical_subject][will_road_construction_bring_changes_in_drainage][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[physical_subject][is_there_a_possibility_of_encroachment_on_surrounding_public_land][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[physical_subject][is_there_a_possibility_of_encroachment_on_surrounding_public_land][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[physical_subject][should_existing_public_structures_be_removed_or_destroyed][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[physical_subject][should_existing_public_structures_be_removed_or_destroyed][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[physical_subject][should_public_facilities_be_relocated_or_restored][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[physical_subject][should_public_facilities_be_relocated_or_restored][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[physical_subject][will_it_damage_existing_irrigation_system_of_area][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[physical_subject][will_it_damage_existing_irrigation_system_of_area][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[physical_subject][will_water_supply_line_distribution_system_be_affected][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[physical_subject][will_water_supply_line_distribution_system_be_affected][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[biological_subject][should_trees_be_felled_in_forest_areas][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[biological_subject][should_trees_be_felled_in_forest_areas][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[biological_subject][will_there_be_damage_to_protected_species_listed_by_government_of_nepal_cites_or_iucn][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[biological_subject][will_there_be_damage_to_protected_species_listed_by_government_of_nepal_cites_or_iucn][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[biological_subject][loss_of_biodiversity_including_fish_and_other_aquatic_life][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[biological_subject][loss_of_biodiversity_including_fish_and_other_aquatic_life][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[biological_subject][will_wildlife_and_bird_habitat_be_affected][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[biological_subject][will_wildlife_and_bird_habitat_be_affected][value]</stringProp>
                </elementProp>
                <elementProp name="selectedData[biological_subject][are_wildlife_likely_to_be_involved_in_road_accidents][value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedData[biological_subject][are_wildlife_likely_to_be_involved_in_road_accidents][value]</stringProp>
                </elementProp>
                <elementProp name="selectedType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">road</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">selectedType</stringProp>
                </elementProp>
                <elementProp name="totalScore" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">totalScore</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development/criteria?criteriaType=basis_and_criteria_of_environmental_impact_analysis</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Development/Criteria - Climate impact and disaster risk analysis method" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="climate_impact_and_adaptation_studies[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">climate_impact_and_adaptation_studies[value]</stringProp>
                </elementProp>
                <elementProp name="adequate_climate_adaptation_actions[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">adequate_climate_adaptation_actions[value]</stringProp>
                </elementProp>
                <elementProp name="alignment_with_existing_national_policies_plans[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">alignment_with_existing_national_policies_plans[value]</stringProp>
                </elementProp>
                <elementProp name="disaster_risk_been_assessed[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">disaster_risk_been_assessed[value]</stringProp>
                </elementProp>
                <elementProp name="disaster_risk_been_mapped[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">disaster_risk_been_mapped[value]</stringProp>
                </elementProp>
                <elementProp name="disaster_risk_reduction_plan[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">disaster_risk_reduction_plan[value]</stringProp>
                </elementProp>
                <elementProp name="disaster_preparedness_and_response_plan_been_prepared[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">disaster_preparedness_and_response_plan_been_prepared[value]</stringProp>
                </elementProp>
                <elementProp name="necessary_arrangements_for_disaster_risk_reduction[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">necessary_arrangements_for_disaster_risk_reduction[value]</stringProp>
                </elementProp>
                <elementProp name="measures_taken_to_reduce_workplace_hazards[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">measures_taken_to_reduce_workplace_hazards[value]</stringProp>
                </elementProp>
                <elementProp name="reconstruction_and_recovery_planned_and_appropriate[value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">reconstruction_and_recovery_planned_and_appropriate[value]</stringProp>
                </elementProp>
                <elementProp name="totalScore" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">totalScore</stringProp>
                </elementProp>
                <elementProp name="percentage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">100</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">percentage</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development/criteria?criteriaType=climate_impact_and_disaster_risk_analysis_method</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Click on - Verification" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;status&quot;:&quot;verification&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?stage=development&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Click on - Approval" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;status&quot;:&quot;approval&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?stage=development&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Click on - Evaluation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;status&quot;:&quot;evaluation&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development?stage=development&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Development - Assessment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;basic_standards&quot;:{&quot;general_standards&quot;:{&quot;is_target_group_identified_and_a_disaggregated_description_attached_and_does_project_seem_to_address_problems_of_target_group&quot;:{&quot;value&quot;:1},&quot;is_available_project_appropriate_from_a_time_frame_perspective&quot;:{&quot;value&quot;:1},&quot;if_there_is_a_problem_of_land_acquisition_and_displacement_is_it_possible_to_solve_problem_and_implement_project&quot;:{&quot;value&quot;:1},&quot;is_premise_presented_that_there_are_no_legal_complications_in_project_implementation&quot;:{&quot;value&quot;:1},&quot;is_institutional_capacity_required_for_project_implementation_sufficient&quot;:{&quot;value&quot;:1},&quot;is_there_availability_of_manpower_raw_materials_technology_etc_required_for_project_implementation&quot;:{&quot;value&quot;:1}},&quot;criteria_related_to_technical_analysis&quot;:{&quot;is_project_suitable_through_technical_analysis&quot;:{&quot;value&quot;:1},&quot;is_initial_design_of_project_inclusive_and_appropriate&quot;:{&quot;value&quot;:1},&quot;is_selection_of_technology_suitable_according_to_project_needs_and_local_conditions&quot;:{&quot;value&quot;:1},&quot;are_project_cost_estimates_prepared_and_appropriate&quot;:{&quot;value&quot;:1},&quot;is_project_result_framework_prepared_and_included_and_appropriate&quot;:{&quot;value&quot;:1},&quot;is_project_implementation_action_plan_formulated_and_appropriate&quot;:{&quot;value&quot;:1},&quot;has_a_suitable_procurement_master_plan_of_project_been_prepared_and_attached&quot;:{&quot;value&quot;:1},&quot;is_there_a_possibility_of_slum_development_or_rapid_urbanization_in_project_area&quot;:{&quot;value&quot;:1},&quot;does_project_seem_to_have_a_geographic_fit&quot;:{&quot;value&quot;:1},&quot;does_project_include_a_plan_with_maintenance_and_sustainable_operations_framework&quot;:{&quot;value&quot;:1},&quot;are_project_safety_standards_and_compliance_measures_mentioned_and_appropriate&quot;:{&quot;value&quot;:1}},&quot;standards_related_to_economic_and_financial_analysis&quot;:{&quot;does_proposed_project_seem_to_contribute_directly_to_goals_of_economic_growth_set_by_national_periodical_and_long_term_plans&quot;:{&quot;value&quot;:1},&quot;does_it_seem_that_there_will_be_a_direct_contribution_to_poverty_alleviation_and_improving_living_standards_of_citizens_through_job_creation_and_enhancement_of_local_economic_activities&quot;:{&quot;value&quot;:1},&quot;is_possibility_of_indirect_financial_benefits_from_project_implementation_high&quot;:{&quot;value&quot;:1},&quot;does_project_seem_to_contribute_to_regional_and_local_balance_in_development&quot;:{&quot;value&quot;:1},&quot;does_social_benefit_cost_analysis_seem_appropriate&quot;:{&quot;value&quot;:1},&quot;is_estimated_total_cost_of_proposed_project_appropriate&quot;:{&quot;value&quot;:1},&quot;are_sources_of_investment_required_for_project_identified_and_secured&quot;:{&quot;value&quot;:1},&quot;is_projects_projected_cash_flow_appropriate&quot;:{&quot;value&quot;:1},&quot;is_Net_Present_Value_of_project_acceptable_and_relatively_high&quot;:{&quot;value&quot;:1},&quot;is_financial_internal_rate_of_return_of_project_acceptable_and_relatively_high&quot;:{&quot;value&quot;:1},&quot;is_pay_back_period_of_project_appropriate_and_relatively_low&quot;:{&quot;value&quot;:1},&quot;does_it_seem_that_there_will_be_a_direct_contribution_to_governments_revenue_growth_from_project_implementation&quot;:{&quot;value&quot;:1},&quot;is_proposed_project_suitable_from_study_of_demand_and_market_conditions_for_goods_or_services_produced_by_project&quot;:{&quot;value&quot;:1},&quot;is_investment_pattern_identified_and_appropriate&quot;:{&quot;value&quot;:1},&quot;if_it_is_necessary_to_select_project_on_other_grounds_even_if_it_does_not_appear_to_be_profitable_from_economic_and_financial_accounting_is_appropriate_evidence_and_recommendation_included&quot;:{&quot;value&quot;:1}},&quot;criteria_related_to_social_and_environmental_impact&quot;:{&quot;is_proposed_project_suitable_based_on_environmental_impact_analysis&quot;:{&quot;value&quot;:1},&quot;is_social_impact_assessment_appropriate&quot;:{&quot;value&quot;:1},&quot;is_climate_adaptation_and_disaster_risk_assessment_appropriate&quot;:{&quot;value&quot;:1},&quot;it_seems_that_project_will_not_affect_protection_of_archeological_religious_cultural_historical_heritage_and_natural_sensitivities_and_local_characteristics&quot;:{&quot;value&quot;:1},&quot;is_proposed_project_suitable_from_flood_landslide_and_other_water_borne_disaster_risk_studies&quot;:{&quot;value&quot;:1},&quot;has_proposed_project_been_found_suitable_through_detailed_geological_studies&quot;:{&quot;value&quot;:1}}},&quot;regional_standards&quot;:{&quot;selectedType&quot;:&quot;industrial_infrastructure&quot;,&quot;selectedData&quot;:{&quot;are_industrialists_willing_to_operate_industry_at_that_location&quot;:{&quot;value&quot;:1},&quot;availability_and_easy_supply_of_raw_materials_required_for_expected_industrial_operations_possible&quot;:{&quot;value&quot;:1},&quot;does_it_promote_consumption_of_locally_produced_raw_materials&quot;:{&quot;value&quot;:1},&quot;is_there_labor_availability_and_is_it_possible_to_utilize_local_labor_through_skill_development_training&quot;:{&quot;value&quot;:1},&quot;is_land_development_possible_is_cost_estimate_prepared_and_appropriate&quot;:{&quot;value&quot;:1},&quot;are_waste_management_and_environmental_protection_measures_recommended_and_feasible&quot;:{&quot;value&quot;:1},&quot;is_it_possible_to_control_air_noise_and_water_pollution_from_industry&quot;:{&quot;value&quot;:1},&quot;is_electricity_communication_water_and_access_roads_available_or_is_it_possible_to_build_and_expand_industry_before_operation&quot;:{&quot;value&quot;:1},&quot;if_settlement_has_to_be_managed_is_it_possible_from_point_of_view_of_archaeological_historical_cultural_land_availability&quot;:{&quot;value&quot;:1},&quot;is_there_a_specific_legal_basis_for_development_and_operation_and_is_it_appropriate&quot;:{&quot;value&quot;:1},&quot;is_project_feasible_from_analysis_of_domestic_and_foreign_market_demand_and_potential&quot;:{&quot;value&quot;:1}}},&quot;projects_other_than_infrastructure&quot;:{&quot;is_the_project_consistent_with_national_priorities_and_development_strategies&quot;:{&quot;value&quot;:1},&quot;does_the_project_seem_to_contribute_to_social_equality_and_justice&quot;:{&quot;value&quot;:1},&quot;does_the_implementation_of_the_project_contribute_to_social_awareness_empowerment_and_mainstreaming&quot;:{&quot;value&quot;:1},&quot;does_it_seem_to_contribute_to_poverty_alleviation_and_inequality_reduction&quot;:{&quot;value&quot;:1},&quot;does_it_seem_to_help_promote_social_tolerance_peace_and_unity&quot;:{&quot;value&quot;:1},&quot;is_there_an_arrangement_to_maintain_participation_transparency_and_accountability_in_project_implementation&quot;:{&quot;value&quot;:1},&quot;does_it_seem_that_the_implementation_of_the_project_will_contribute_to_social_transformation&quot;:{&quot;value&quot;:1},&quot;will_it_contribute_to_the_development_of_local_manpowers_skills_abilities_and_entrepreneurship_and_promotion_of_employment_and_selfemployment&quot;:{&quot;value&quot;:1},&quot;does_it_seem_to_contribute_to_gender_equality_and_empowerment&quot;:{&quot;value&quot;:1}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/development/assessment</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Stage = Dpr " enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 1 - General Description" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="implementation_period_of_the_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">implementation_period_of_the_project</stringProp>
                </elementProp>
                <elementProp name="purpose_of_the_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">dds23</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">purpose_of_the_project</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=general_description&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 2- Estimate_total" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="total_cost_estimate_of_the_project" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">479</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">total_cost_estimate_of_the_project</stringProp>
                </elementProp>
                <elementProp name="development_construction_cost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">development_construction_cost</stringProp>
                </elementProp>
                <elementProp name="operating_cost" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">43235</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operating_cost</stringProp>
                </elementProp>
                <elementProp name="other_grant" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">other_grant</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=estimate_total_cost&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 3- Source Cost  Bearings" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&quot;government_of_nepal&quot;:113,&quot;external_support&quot;:{&quot;debt&quot;:123,&quot;grant&quot;:123123}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=source_cost_bearing&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 4- Return project" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;contribution_to_economic_growth&quot;:&quot;dsfsdf&quot;,&quot;contribution_to_employment&quot;:&quot;213&quot;,&quot;contribution_to_poverty_reduction_and_social_equity&quot;:&quot;asdf&quot;,&quot;economic_social_returns_of_the_project&quot;:{&quot;financial_returns&quot;:&quot;sdf&quot;,&quot;social_return&quot;:&quot;sdf&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=return_project&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 5- Economic Financial" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;net_present_value_of_money&quot;:23,&quot;benefit_cost_ratio&quot;:123,&quot;internal_rate_of_Return_of_the_project&quot;:123,&quot;time_taken_to_recover_the_investment&quot;:132,&quot;cost_effectiveness_analysis&quot;:&quot;123123&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=economic_financial&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 6 - Environment Social" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;conclusions_of_environmental_and_social_analysis&quot;:&quot;sdf&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=environmental_social&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 7 - Climate disaster" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;conclusions_of_climate_change_and_disaster_risk_analysis&quot;:&quot;sfd&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=climate_disaster&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 8 - Implementation Expenditure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;project_implementation_expenditure&quot;:[{&quot;fiscal_year&quot;:&quot;2076/77&quot;,&quot;major_functions_and_magnitudes&quot;:{&quot;major_work&quot;:&quot;sdf&quot;,&quot;unit&quot;:&quot;sadf&quot;,&quot;quantity&quot;:123},&quot;cost_estimate&quot;:{&quot;building_development&quot;:234,&quot;total&quot;:480,&quot;operation&quot;:123,&quot;other&quot;:123}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=implementation_expenditure&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 9 - Organization Structure Staffing" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="organization_structure_and_staffing" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">fqwer</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">organization_structure_and_staffing</stringProp>
                </elementProp>
                <elementProp name="manpower_required[0][manpower_required_to_implement_the_project][fiscal_year]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">2076/77</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">manpower_required[0][manpower_required_to_implement_the_project][fiscal_year]</stringProp>
                </elementProp>
                <elementProp name="manpower_required[0][manpower_required_to_implement_the_project][total]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">347</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">manpower_required[0][manpower_required_to_implement_the_project][total]</stringProp>
                </elementProp>
                <elementProp name="manpower_required[0][manpower_required_to_implement_the_project][skillful]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">348</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">manpower_required[0][manpower_required_to_implement_the_project][skillful]</stringProp>
                </elementProp>
                <elementProp name="manpower_required[0][manpower_required_to_implement_the_project][semi_skilled]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">manpower_required[0][manpower_required_to_implement_the_project][semi_skilled]</stringProp>
                </elementProp>
                <elementProp name="manpower_required[0][manpower_required_to_implement_the_project][unskilled]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">manpower_required[0][manpower_required_to_implement_the_project][unskilled]</stringProp>
                </elementProp>
                <elementProp name="materials_required[0][construction_materials_required][fiscal_year]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">2076/77</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">materials_required[0][construction_materials_required][fiscal_year]</stringProp>
                </elementProp>
                <elementProp name="materials_required[0][construction_materials_required][building_materials]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">2177</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">materials_required[0][construction_materials_required][building_materials]</stringProp>
                </elementProp>
                <elementProp name="materials_required[0][construction_materials_required][unit]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">231</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">materials_required[0][construction_materials_required][unit]</stringProp>
                </elementProp>
                <elementProp name="materials_required[0][construction_materials_required][quantity]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">materials_required[0][construction_materials_required][quantity]</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=organization_structure_staffing&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Step 10 - Operational Management" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="operational_management[structure_of_operation_and_maintenance]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operational_management[structure_of_operation_and_maintenance]</stringProp>
                </elementProp>
                <elementProp name="operational_management[estimates_of_operation_and_maintenance_expenses]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operational_management[estimates_of_operation_and_maintenance_expenses]</stringProp>
                </elementProp>
                <elementProp name="operational_management[handover_and_responsibility]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asdf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operational_management[handover_and_responsibility]</stringProp>
                </elementProp>
                <elementProp name="operational_management[potential_income_generation_of_the_project]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">asfd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">operational_management[potential_income_generation_of_the_project]</stringProp>
                </elementProp>
                <elementProp name="epilogue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sfda</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">epilogue</stringProp>
                </elementProp>
                <elementProp name="schedule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">sadf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">schedule</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?formType=operational_management&amp;saveType=saveAndContinue&amp;stage=dpr</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Click on - Verification" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;status&quot;:&quot;verification&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?stage=dpr&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Click on - Approval" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;status&quot;:&quot;approval&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?stage=dpr&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Click on - Evaluation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;status&quot;:&quot;evaluation&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr?stage=dpr&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Dpr, Dpr - Assessment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;basic_standards&quot;:{&quot;general_standards&quot;:{&quot;has_the_project_been_shown_to_be_feasible_through_the_feasibility_study&quot;:{&quot;value&quot;:1},&quot;is_the_target_group_of_the_project_correctly_identified_and_its_detailed_description_attached&quot;:{&quot;value&quot;:1},&quot;is_the_detailed_institutional_structure_required_for_project_implementation_proposed_and_appropriate&quot;:{&quot;value&quot;:1},&quot;management_plan_of_manpower_required_for_the_implementation_of_the_project_included_and_appropriate&quot;:{&quot;value&quot;:1},&quot;proposed_construction_period_reasonable&quot;:{&quot;value&quot;:1},&quot;land_acquisition_and_resettlement_problems_solution_plan_included_appropriate&quot;:{&quot;value&quot;:1},&quot;legal_process_permission_required_for_the_operation_of_the_project_has_it_been_completed&quot;:{&quot;value&quot;:1}},&quot;criteria_related_to_technical_analysis&quot;:{&quot;is_project_suitable_through_technical_analysis&quot;:{&quot;value&quot;:1},&quot;is_the_detailed_design_of_every_day_components_prepared_and_appropriate&quot;:{&quot;value&quot;:1},&quot;is_it_always_appropriate_to_prepare_a_detailed_cost_estimate_for_each_component&quot;:{&quot;value&quot;:1},&quot;is_there_an_appropriate_technology_selection&quot;:{&quot;value&quot;:1},&quot;result_framework_included_and_appropriate_for_the_immediate_results_outcomes_and_impacts_of_the_project&quot;:{&quot;value&quot;:1},&quot;is_a_brief_Project_Implementation_Manual_with_Key_Performance_Indicators_prepared_and_appropriate&quot;:{&quot;value&quot;:1},&quot;is_the_detailed_project_implementation_plan_attached_and_appropriate&quot;:{&quot;value&quot;:1},&quot;has_the_project_set_measurable_milestones_so_that_it_is_easy_to_monitor_the_results_to_be_achieved_within_a_certain_period_of_time&quot;:{&quot;value&quot;:1},&quot;has_a_detailed_and_appropriate_work_breakdown_structure_been_prepared_for_the_various_packages_to_be_edited_in_a_single_document&quot;:{&quot;value&quot;:1},&quot;is_a_suitable_procurement_plan_with_various_packages_prepared_and_attached&quot;:{&quot;value&quot;:1},&quot;has_an_appropriate_Master_Construction_Schedule_been_prepared_and_included&quot;:{&quot;value&quot;:1},&quot;has_an_appropriate_monitoring_and_evaluation_plan_been_formulated_and_incorporated&quot;:{&quot;value&quot;:1},&quot;does_the_project_include_a_plan_for_maintenance_and_sustainable_operations&quot;:{&quot;value&quot;:1},&quot;are_safety_standards_and_appropriate_action_plans_for_their_implementation_included&quot;:{&quot;value&quot;:1}},&quot;standards_related_to_economic_and_financial_analysis&quot;:{&quot;is_there_profitable_management_through_economic_and_financial_analysis&quot;:{&quot;value&quot;:1},&quot;is_present_value_of_money_acceptable_and_relatively_high&quot;:{&quot;value&quot;:1},&quot;is_the_rate_of_return_of_the_product_of_the_price_acceptable_and_relatively_high&quot;:{&quot;value&quot;:1},&quot;is_the_benefitcost_ratio_acceptable_and_comparability_high&quot;:{&quot;value&quot;:1},&quot;social_benefitcost_acceptable_and_relatively_high&quot;:{&quot;value&quot;:1},&quot;is_the_investment_return_period_acceptable_and_relatively_low&quot;:{&quot;value&quot;:1},&quot;is_the_total_detailed_cost_estimate_of_the_proposed_project_appropriate&quot;:{&quot;value&quot;:1},&quot;is_the_source_of_investment_required_for_the_project_identified_and_secured&quot;:{&quot;value&quot;:1},&quot;is_the_projects_projected_cash_flow_prepared_and_appropriate&quot;:{&quot;value&quot;:1}},&quot;criteria_related_to_social_and_environmental_impact&quot;:{&quot;project_been_deemed_suitable_by_environmental_impact_assessment_and_has_a_risk_and_impact_mitigation_plan_been_included&quot;:{&quot;value&quot;:1},&quot;appropriate_from_the_analysis_of_gender_and_social_inclusive_aspects_and_is_the_related_risk_management_action_plan_attached&quot;:{&quot;value&quot;:1},&quot;analysis_of_mitigation_and_adaptation_aspects_of_climate_change_the_project_was_found_suitable_and_the_adaptation_and_risk_reduction_plan&quot;:{&quot;value&quot;:1},&quot;are_archaeological_religious_cultural_historical_heritage_and_natural_sensitivities_and_conservation_plans&quot;:{&quot;value&quot;:1},&quot;is_the_project_suitable_for_flood_landslide_and_other_water_borne_disaster_risk_studiesrisk_mitigation_measures_proposed&quot;:{&quot;value&quot;:1},&quot;is_project_suitable_for_detailed_geological_studies_And_are_risk_mitigation_measures_proposed&quot;:{&quot;value&quot;:1}}},&quot;regional_standards&quot;:{&quot;selectedType&quot;:&quot;tourism_infrastructure&quot;,&quot;selectedData&quot;:{&quot;is_project_suitable_from_point_of_view_of_access_road_transportation_hotels_basic_health_services_and_other_tourist_service_facilities&quot;:{&quot;value&quot;:1},&quot;is_project_profitable_from_projection_of_tourist_arrivals&quot;:{&quot;value&quot;:1},&quot;is_project_proposed_as_part_of_integrated_tourism_circuit_package&quot;:{&quot;value&quot;:1},&quot;does_the_project_involve_the_use_of_local_products_development_and_promotion_of_art_culture_and_originality&quot;:{&quot;value&quot;:1},&quot;is_the_tourist_safety_plan_included_and_appropriate&quot;:{&quot;value&quot;:1},&quot;is_the_project_designed_to_promote_quality_tourism&quot;:{&quot;value&quot;:1}}},&quot;projects_other_than_infrastructure&quot;:{&quot;is_the_design_of_the_project_consistent_with_national_priorities_and_development_strategies&quot;:{&quot;value&quot;:1},&quot;has_the_project_adopted_appropriate_strategies_to_maintain_social_equity_and_justice&quot;:{&quot;value&quot;:1},&quot;does_the_project_include_social_awareness_empowerment_and_mainstreaming_strategies&quot;:{&quot;value&quot;:1},&quot;is_the_project_designed_to_contribute_to_poverty_alleviation_and_inequality_reduction&quot;:{&quot;value&quot;:1},&quot;is_the_project_designed_to_promote_social_tolerance_peace_and_unity&quot;:{&quot;value&quot;:1},&quot;are_measures_to_maintain_participation_transparency_and_accountability_included_in_project_implementation&quot;:{&quot;value&quot;:1},&quot;are_the_foundations_that_contribute_to_social_transformation_included_in_the_activities_of_the_project&quot;:{&quot;value&quot;:1},&quot;activities_determined_to_contribute_to_the_development_of_skills&quot;:{&quot;value&quot;:1},&quot;is_the_project_designed_to_contribute_to_gender_equality_and_empowerment&quot;:{&quot;value&quot;:1}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/dpr/assessment</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Stage = Readiness" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Readiness, Click on - Evaluation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;status&quot;:&quot;evaluation&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/readiness?stage=readiness&amp;formType=status_change</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stage = Readiness - Assessment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;evaluation_criteria&quot;:{&quot;approved_report_of_detailed_study_and_or_feasibility_study&quot;:{&quot;value&quot;:1},&quot;approved_report_of_preliminary_environmental_assessment_environmental_impact_assessment&quot;:{&quot;value&quot;:1},&quot;assurance_of_resources_for_investment&quot;:{&quot;value&quot;:1},&quot;decision_on_investment_modality&quot;:{&quot;value&quot;:1},&quot;document_of_completion_of_legal_process_of_land_acquisition&quot;:{&quot;value&quot;:1},&quot;proof_of_obtaining_any_legal_approval&quot;:{&quot;value&quot;:1},&quot;logical_framework&quot;:{&quot;value&quot;:1},&quot;approved_technical_design_of_the_project&quot;:{&quot;value&quot;:1},&quot;detailed_implementation_action_plan&quot;:{&quot;value&quot;:1},&quot;public_procurement_master_plan&quot;:{&quot;value&quot;:1},&quot;documents_on_completion_of_necessary_procedures_to_remove_any_structure_or_forest_area_in_the_project_site&quot;:{&quot;value&quot;:1},&quot;institutional_and_policy_arrangements_necessary_for_implementation&quot;:{&quot;value&quot;:1},&quot;planning_of_supply_of_necessary_raw_materials_technology_manpower&quot;:{&quot;value&quot;:1},&quot;management_plan_for_supplementary_infrastructure_and_services&quot;:{&quot;value&quot;:1},&quot;local_support_in_project_implementation_and_grievance_management_mechanism&quot;:{&quot;value&quot;:1}},&quot;total_score&quot;:15}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${website}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/projects/${project_id}/readiness/assessment</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
